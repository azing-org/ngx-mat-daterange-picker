!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/cdk/portal"),require("rxjs/operators"),require("rxjs"),require("@angular/animations"),require("@angular/material/form-field"),require("@angular/material/core"),require("@angular/material/input"),require("@angular/material/button"),require("@angular/material/tooltip"),require("@angular/cdk/overlay"),require("@angular/material/datepicker"),require("@angular/core"),require("@angular/material-moment-adapter"),require("moment")):"function"==typeof define&&define.amd?define("ngx-mat-daterange-picker",["exports","@angular/common","@angular/cdk/portal","rxjs/operators","rxjs","@angular/animations","@angular/material/form-field","@angular/material/core","@angular/material/input","@angular/material/button","@angular/material/tooltip","@angular/cdk/overlay","@angular/material/datepicker","@angular/core","@angular/material-moment-adapter","moment"],t):t(e["ngx-mat-daterange-picker"]={},e.ng.common,e.ng.cdk.portal,e.rxjs.operators,e.rxjs,e.ng.animations,e.ng.material["form-field"],e.ng.material.core,e.ng.material.input,e.ng.material.button,e.ng.material.tooltip,e.ng.cdk.overlay,e.ng.material.datepicker,e.ng.core,e.ng["material-moment-adapter"],e.moment)}(this,function(e,t,i,s,r,a,n,o,p,l,c,d,g,u,m,f){"use strict";var h=function(){return(h=Object.assign||function(e){for(var t,r=1,a=arguments.length;r<a;r++)for(var n in t=arguments[r])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)},D=new u.InjectionToken("date"),y=function(){function e(e,t){this._fromDate=e,this._toDate=t,this.rangeUpdate$=new r.Subject}return Object.defineProperty(e.prototype,"fromDate",{get:function(){return this._fromDate},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"toDate",{get:function(){return this._toDate},enumerable:!0,configurable:!0}),e.prototype.updateRange=function(e,t){void 0===e&&(e=this._fromDate),void 0===t&&(t=this._toDate),this._fromDate=e,this._toDate=t,this.rangeUpdate$.next({fromDate:this._fromDate,toDate:this._toDate})},e.decorators=[{type:u.Injectable}],e.ctorParameters=function(){return[{type:undefined,decorators:[{type:u.Inject,args:[D]}]},{type:undefined,decorators:[{type:u.Inject,args:[D]}]}]},e}(),v=function(){function e(){this.defaultOptions={excludeWeekends:!1,animation:!0,locale:"en-US",fromMinMax:{fromDate:null,toDate:null},toMinMax:{fromDate:null,toDate:null},rangeLabel:"Add End-Date",singleDate:!0}}return Object.defineProperty(e.prototype,"ngxDrpOptions",{get:function(){return this._ngxDrpOptions},set:function(e){this._ngxDrpOptions=h({},this.defaultOptions,e)},enumerable:!0,configurable:!0}),e.decorators=[{type:u.Injectable}],e.ctorParameters=function(){return[]},e}(),x={transformPanel:a.trigger("transformPickerOverlay",[a.state("void",a.style({opacity:0,transform:"scale(1, 0)"})),a.state("enter",a.style({opacity:1,transform:"scale(1, 1)"})),a.transition("void => enter",a.group([a.animate("400ms cubic-bezier(0.25, 0.8, 0.25, 1)")])),a.transition("* => void",a.animate("100ms linear",a.style({opacity:0})))])},b=function(){function e(e,t,r){this.rangeStoreService=e,this.configStoreService=t,this.overlayRef=r,this.presets=[]}return e.prototype.ngOnInit=function(){var e,t;this.fromDate=this.rangeStoreService.fromDate,this.toDate=this.rangeStoreService.toDate,this.startDatePrefix=this.configStoreService.ngxDrpOptions.startDatePrefix||"FROM:",this.endDatePrefix=this.configStoreService.ngxDrpOptions.endDatePrefix||"TO:",this.applyLabel=this.configStoreService.ngxDrpOptions.applyLabel||"Apply",this.cancelLabel=this.configStoreService.ngxDrpOptions.cancelLabel||"Cancel",this.presets=this.configStoreService.ngxDrpOptions.presets,this.shouldAnimate=this.configStoreService.ngxDrpOptions.animation?"enter":"noop",e=this.configStoreService.ngxDrpOptions.fromMinMax,this.fromMinDate=e.fromDate,this.fromMaxDate=e.toDate,t=this.configStoreService.ngxDrpOptions.toMinMax,this.toMinDate=t.fromDate,this.toMaxDate=t.toDate,this.setSingleDate(this.configStoreService.ngxDrpOptions.singleDate)},e.prototype.updateFromDate=function(e){this.fromDate=e,this.singleDate&&this.applyNewDates(null)},e.prototype.updateToDate=function(e){this.toDate=e},e.prototype.updateRangeByPreset=function(e){this.updateFromDate(e.range.fromDate),this.singleDate&&this.applyNewDates(void 0)},e.prototype.applyNewDates=function(e){this.rangeStoreService.updateRange(this.fromDate,this.configStoreService.ngxDrpOptions.singleDate?null:this.toDate),this.disposeOverLay()},e.prototype.addEndDate=function(e){this.configStoreService.ngxDrpOptions.singleDate=!this.configStoreService.ngxDrpOptions.singleDate,this.setSingleDate(this.configStoreService.ngxDrpOptions.singleDate)},e.prototype.discardNewDates=function(e){this.disposeOverLay()},e.prototype.disposeOverLay=function(){this.overlayRef.dispose()},e.prototype.setSingleDate=function(e){this.singleDate=e,this.rangeLabel=this.getRangeLabel(e)},e.prototype.getRangeLabel=function(e){return e?this.configStoreService.ngxDrpOptions.addEndDateLabel||"Add End-Date":this.configStoreService.ngxDrpOptions.removeEndDateLabel||"Remove End-Date"},e.decorators=[{type:u.Component,args:[{selector:"ngx-mat-drp-picker-overlay",template:'<div [@transformPickerOverlay]="shouldAnimate" class="ngx-mat-drp-calendar-container">\r\n  <div class="ngx-mat-drp-calendar-item">\r\n    <calendar-wrapper [prefixLabel]="startDatePrefix" [selectedDate]="fromDate" [minDate]="fromMinDate"\r\n      [maxDate]="fromMaxDate" (selectedDateChange)="updateFromDate($event)">\r\n    </calendar-wrapper>\r\n  </div>\r\n  <div class="ngx-mat-drp-calendar-item" *ngIf=\'!singleDate\'>\r\n    <calendar-wrapper [prefixLabel]="endDatePrefix" [selectedDate]="toDate" [minDate]="toMinDate" [maxDate]="toMaxDate"\r\n      [fromDate]="fromDate" (selectedDateChange)="updateToDate($event)">\r\n    </calendar-wrapper>\r\n  </div>\r\n  <div class="ngx-mat-drp-calendar-item">\r\n    <div class="ngx-mat-drp-menu">\r\n      <mat-drp-presets [presets]="presets" (presetChanged)="updateRangeByPreset($event)"></mat-drp-presets>\r\n      <div class="ngx-mat-drp-controls">\r\n        <button mat-button (click)="addEndDate($event)">{{rangeLabel}}</button>\r\n        <button mat-button (click)="discardNewDates($event)" *ngIf="false">{{cancelLabel}}</button>\r\n        <button mat-button *ngIf=\'!singleDate\' color="primary" (click)="applyNewDates($event)">{{applyLabel}}</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>',animations:[x.transformPanel],encapsulation:u.ViewEncapsulation.None,styles:['.ngx-mat-drp-calendar-container{display:flex;flex-wrap:wrap;justify-content:space-around;min-width:350px;min-height:300px}.ngx-mat-drp-calendar-item{flex-basis:1;min-width:210px;padding:1em;font-family:Roboto,"Helvetica Neue",sans-serif;font-size:14px;font-weight:400}.ngx-mat-drp-menu{flex-basis:1;height:100%}.ngx-mat-drp-controls{display:flex;justify-content:space-around;margin:10% auto}.ngx-mat-drp-overlay{box-shadow:0 5px 5px -3px rgba(0,0,0,.2),0 8px 10px 1px rgba(0,0,0,.14),0 3px 14px 2px rgba(0,0,0,.12);background:#fff;border-radius:2px}.ngx-mat-drp-overlay-backdrop{background-color:rgba(0,0,0,.2);opacity:.2}']}]}],e.ctorParameters=function(){return[{type:y},{type:v},{type:d.OverlayRef}]},e}(),S={panelClass:"ngx-mat-drp-overlay",hasBackdrop:!0,backdropClass:"ngx-mat-drp-overlay-backdrop",shouldCloseOnBackdropClick:!0},C=function(){function e(e,t){this.overlay=e,this.injector=t}return e.prototype.open=function(e,t){void 0===e&&(e={}),this.hostElemRef=t;var r=h({},S,e),a=this.createOverlay(r),n=this.createInjector(a),o=new i.ComponentPortal(b,null,n);return a.attach(o),a.backdropClick().pipe(s.takeWhile(function(){return r.shouldCloseOnBackdropClick})).subscribe(function(){return a.dispose()}),a},e.prototype.createOverlay=function(e){var t=this.getOverlayConfig(e);return this.overlay.create(t)},e.prototype.getOverlayConfig=function(e){var t=this.overlay.position().flexibleConnectedTo(this.hostElemRef).withFlexibleDimensions(!1).withViewportMargin(8).withDefaultOffsetY(12).withPositions([{originX:"start",originY:"bottom",overlayX:"start",overlayY:"top"},{originX:"start",originY:"top",overlayX:"start",overlayY:"bottom"},{originX:"end",originY:"bottom",overlayX:"end",overlayY:"top"},{originX:"end",originY:"top",overlayX:"end",overlayY:"bottom"}]);return new d.OverlayConfig({hasBackdrop:e.hasBackdrop,backdropClass:e.backdropClass,panelClass:e.panelClass,scrollStrategy:this.overlay.scrollStrategies.block(),positionStrategy:t})},e.prototype.createInjector=function(e){var t=new WeakMap;return t.set(d.OverlayRef,e),new i.PortalInjector(this.injector,t)},e.decorators=[{type:u.Injectable}],e.ctorParameters=function(){return[{type:d.Overlay},{type:u.Injector}]},e}(),O=function(){function e(e,t,r,a,n){this.changeDetectionRef=e,this.calendarOverlayService=t,this.rangeStoreService=r,this.configStoreService=a,this.datePipe=n,this.selectedDateRangeChanged=new u.EventEmitter,this.selectedDateRange=""}return e.prototype.ngOnInit=function(){var a=this;this.configStoreService.ngxDrpOptions=this.options,this.options.placeholder=this.options.placeholder||"Choose a date",this.rangeUpdate$=this.rangeStoreService.rangeUpdate$.subscribe(function(e){var t=a.formatToDateString(e.fromDate,a.options.format),r=a.formatToDateString(e.toDate,a.options.format);a.configStoreService.ngxDrpOptions.singleDate?a.selectedDateRange=""+t:a.selectedDateRange=t+" - "+r,a.selectedDateRangeChanged.emit(e)}),this.rangeStoreService.updateRange(this.options.range.fromDate,this.options.range.toDate),this.changeDetectionRef.detectChanges()},e.prototype.ngOnDestroy=function(){this.rangeUpdate$&&this.rangeUpdate$.unsubscribe()},e.prototype.formatToDateString=function(e,t){return this.datePipe.transform(e,t)},e.prototype.openCalendar=function(e){this.calendarOverlayService.open(this.options.calendarOverlayConfig,this.calendarInput)},e.prototype.resetDates=function(e){this.rangeStoreService.updateRange(e.fromDate,e.toDate)},e.decorators=[{type:u.Component,args:[{selector:"ngx-mat-drp",template:'<div> \r\n  \r\n  <mat-form-field class="ngx-mat-drp-date-display">\r\n    <input class="ngx-mat-drp-date-input"\r\n          matInput [placeholder]="options.placeholder"\r\n          [value]="selectedDateRange"\r\n          [matTooltip]="selectedDateRange"\r\n          (click)="openCalendar($event)"\r\n          readonly\r\n          #calendarInput >\r\n    <div matSuffix \r\n          class="ngx-mat-drp-calendar"\r\n          (click)="openCalendar($event)">\r\n    </div>\r\n  </mat-form-field>\r\n  \r\n</div>    \r\n',providers:[C,y,v,t.DatePipe],changeDetection:u.ChangeDetectionStrategy.OnPush,styles:['.ngx-mat-drp-date-display{min-width:230px}.ngx-mat-drp-date-input{text-overflow:ellipsis;color:#4169e1}.ngx-mat-drp-calendar{background-image:url(\'data:image/svg+xml,<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">    <path d="M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z"/>    <path d="M0 0h24v24H0z" fill="none"/></svg>\');width:24px;height:24px}']}]}],e.ctorParameters=function(){return[{type:u.ChangeDetectorRef},{type:C},{type:y},{type:v},{type:t.DatePipe}]},e.propDecorators={calendarInput:[{type:u.ViewChild,args:["calendarInput"]}],selectedDateRangeChanged:[{type:u.Output}],options:[{type:u.Input}]},e}(),k=function(){function e(e){this.configStore=e,this.selectedDateChange=new u.EventEmitter,this.weekendFilter=function(e){return!0},this.dateFormat=e.ngxDrpOptions.format,e.ngxDrpOptions.excludeWeekends&&(this.weekendFilter=function(e){var t=e.getDay();return 0!==t&&6!==t})}return e.prototype.ngOnChanges=function(e){e.selectedDate&&(this.matCalendar.activeDate=e.selectedDate.currentValue),e.fromDate&&this.renderMatCalendarView()},e.prototype.onSelectedChange=function(e){this.selectedDateChange.emit(e)},e.prototype.onYearSelected=function(e){},e.prototype.onUserSelection=function(e){},e.prototype.dateClass=function(){var t=this;return function(e){if(t.fromDate&&!(t.fromDate<=e))return"before-from-date"}},e.prototype.renderMatCalendarView=function(){var e=this,t=this.minDate;this.minDate=new Date("2001-01-01"),setTimeout(function(){e.minDate=t},0)},e.decorators=[{type:u.Component,args:[{selector:"calendar-wrapper",template:'<div>\r\n\r\n  \x3c!-- <mat-divider></mat-divider> --\x3e\r\n  <span class="ngx-mat-drp-date-label">\r\n    <label>{{prefixLabel}}</label>\r\n    <label class="ngx-mat-drp-selected-date-label">{{selectedDate | date:dateFormat}}</label>\r\n  </span>\r\n  \x3c!-- <mat-divider></mat-divider> --\x3e\r\n\r\n  <mat-calendar \r\n    [startAt]="selectedDate"\r\n    [selected]="selectedDate"\r\n    [minDate]="minDate"\r\n    [maxDate]="maxDate"\r\n    [dateClass]="dateClass()"\r\n    (selectedChange)="onSelectedChange($event)"\r\n    (yearSelected)="onYearSelected($event)"\r\n    (_userSelection)="onUserSelection($event)"\r\n    [dateFilter]="weekendFilter">\r\n  </mat-calendar>\r\n\r\n</div>',changeDetection:u.ChangeDetectionStrategy.OnPush,styles:[".ngx-mat-drp-date-label{background:#fafafa;margin:15px;padding:4px 2px;width:100%;font-size:14px;font-weight:500}.ngx-mat-drp-selected-date-label{color:rgba(0,0,0,.38);padding-left:5%}:host ::ng-deep.before-from-date .mat-calendar-body-selected{background-color:red}"]}]}],e.ctorParameters=function(){return[{type:v}]},e.propDecorators={matCalendar:[{type:u.ViewChild,args:[g.MatCalendar]}],selectedDateChange:[{type:u.Output}],selectedDate:[{type:u.Input}],prefixLabel:[{type:u.Input}],minDate:[{type:u.Input}],maxDate:[{type:u.Input}],fromDate:[{type:u.Input}]},e}(),w=function(){function e(){this.presetChanged=new u.EventEmitter}return e.prototype.ngOnInit=function(){},e.prototype.setPresetPeriod=function(e){this.presetChanged.emit(e)},e.decorators=[{type:u.Component,args:[{selector:"mat-drp-presets",template:'<div>\r\n  <ul class="ngx-mat-drp-presets-list">\r\n    <li *ngFor="let preset of presets" (click)="setPresetPeriod(preset)"> {{preset.presetLabel}} </li>\r\n  </ul>\r\n</div>',changeDetection:u.ChangeDetectionStrategy.OnPush,styles:[".ngx-mat-drp-presets-list{list-style-type:none;margin:0;padding:0}.ngx-mat-drp-presets-list li{margin:5px 0;padding:4%;cursor:pointer;background:#fafafa;color:#3f51b5;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ngx-mat-drp-presets-list li:hover{background:#3f51b5;color:#fff}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={presets:[{type:u.Input}],presetChanged:[{type:u.Output}]},e}(),M=f(),P=function(){function e(){}return e.decorators=[{type:u.NgModule,args:[{imports:[t.CommonModule,n.MatFormFieldModule,g.MatDatepickerModule,o.MatNativeDateModule,p.MatInputModule,l.MatButtonModule,c.MatTooltipModule,d.OverlayModule,m.MatMomentDateModule],declarations:[O,k,b,w],providers:[{provide:D,useValue:M}],entryComponents:[b],exports:[O]}]}],e}();e.NgxMatDrpModule=P,e.NgxMatDrpComponent=O,e.PickerOverlayComponent=b,e.CalendarWrapperComponent=k,e.PresetsComponent=w,e.CalendarOverlayService=C,e.ConfigStoreService=v,e.DATE=D,e.RangeStoreService=y,e.ɵa=x,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-mat-daterange-picker.umd.min.js.map